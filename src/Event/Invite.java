/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Event;

import com.sun.rowset.CachedRowSetImpl;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Jayant Kumar Yadav
 */
public class Invite extends javax.swing.JPanel {

    /**
     * Creates new form Invite
     */
    
    public boolean inviteClick;
    public boolean deleteClick;
    public DefaultListModel newnoti;
    public JList eventList;
    public DbHandler db;
    public Connection con;
    PreparedStatement ps;
    JFrame frame;
    JScrollPane listMember;
    ClientConnect cc;
    private CachedRowSetImpl crs;
    int evid, acceptinvite, totalinvite;
    String types;
    
    public Invite(JFrame frame, int evid, ClientConnect cc, String types) {
        initComponents();
        this.frame=frame;
        this.cc = cc;
        this.evid = evid;
        this.types=types;
        
        
        inviteClick = false;
        deleteClick = false;
        totalinvite = 0;
        acceptinvite = 0;
        
        newnoti = new DefaultListModel();
        
        eventList = new JList(newnoti);
        eventList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        eventList.setCellRenderer(new DefaultListCellRenderer());
        eventList.setVisibleRowCount(4);
        listMember = new JScrollPane(eventList);
        listMember.setBounds(50, 170, 320, 270);
        //listscroll.setSize(200, 200);
        db = new DbHandler();
        con = db.retcon();
        
        populate();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void populate(){
        
    String qur = "select * from member;";

        try {
            //ps = con.prepareStatement(qur);
            //ps.setString(2,m.pass.getText());
            //System.out.println("login calliing");
            //ResultSet rs = (ResultSet) ps.executeQuery();
            //System.out.println("login calliing result");
            
            
            cc.getQuerry(qur,2,cc);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(cc.connected){
                    while(!cc.resultOk){
                        System.out.print("");
                    }
                    
                    crs =  cc.sendResult();
                    
                    while(crs.next()){
                //m.login.setText("Logged in");
                //  System.out.println("login calliing while");
                try {
                    //    System.out.println("login callin bkcvjDkSing"+" "+rs.getString("noti_user"));
                    if(!newnoti.contains(crs.getString("uname"))){
                        newnoti.addElement(crs.getString("uname")+" "+crs.getString("access"));
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("login calliing while here");
                }
            }
                    
                    
                }
            
            
                
                
            
        } catch (SQLException ex) {
            Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("login calliing while there");
        }
        
        
        
        
        qur = "select * from notification where event_id="+evid+";";
        
        try {
            //ps = con.prepareStatement(qur);
            //ps.setString(2,m.pass.getText());
            //System.out.println("login calliing");
            //ResultSet rs = (ResultSet) ps.executeQuery();
            //System.out.println("login calliing result");
            
            
            cc.getQuerry(qur,2,cc);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(cc.connected){
                    while(!cc.resultOk){
                        System.out.print("");
                    }
                    
                    crs =  cc.sendResult();
                    
                    while(crs.next()){
                //m.login.setText("Logged in");
                //  System.out.println("login calliing while");
                try {
                    //    System.out.println("login callin bkcvjDkSing"+" "+rs.getString("noti_user"));
                    if(crs.getInt("accept")==2)
                        acceptinvite++;
                    
                    totalinvite++;
                    

                } catch (SQLException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("login calliing while here");
                }
            }
                    
                    
                }
            
            
                
                
            
        } catch (SQLException ex) {
            Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("login calliing while there");
        }
        
        
        
        invites.setText(""+totalinvite);
       // System.out.println("login calliing while there " + totalinvite);
        accepted.setText(""+acceptinvite);
        //System.out.println("login calliing while there "+acceptinvite);
        
        mainPane.add(listMember, BorderLayout.CENTER);
        listMember.setVisible(true);
        System.out.println("added");
}
    
    
    
    
    public void sendInvite(){
        
        
            int selected[] = eventList.getSelectedIndices();
            
            String qur;
            int s;
            ListModel l = eventList.getModel();
            
            if(selected.length>0){
            
                for(int i: selected){
                    
                    
                    if(!l.getElementAt(i).toString().split(" ")[1].equals(types)){
                        
                    
                    qur = "insert ignore into notification values(0,"+evid+",'"+l.getElementAt(i).toString().split(" ")[0]+"',0);";
                    cc.getQuerry(qur,1,cc);
                    try {
                        Thread.sleep(2500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Searching.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(cc.connected){
                        while(!cc.update){
                            System.out.print("h"+i);
                        }
                        
                        cc.update = false;
                        
                        //JDialog.setDefaultLookAndFeelDecorated(true);
                        //JOptionPane.showConfirmDialog(null, "getting error to invite "+l.getElementAt(i)+" try again!", "Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        
                        
                    }
                
                }
                
                
                try {
                    Thread.sleep(50);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Invite.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
            
            }   
        
        
    }
    
    
 
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPane = new javax.swing.JPanel();
        error = new javax.swing.JLabel();
        error1 = new javax.swing.JLabel();
        invites = new javax.swing.JLabel();
        error3 = new javax.swing.JLabel();
        accepted = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        invite = new javax.swing.JButton();
        inviteall = new javax.swing.JCheckBox();

        mainPane.setBackground(new java.awt.Color(75, 172, 198));

        error.setFont(new java.awt.Font("Trebuchet MS", 0, 24)); // NOI18N
        error.setForeground(new java.awt.Color(253, 252, 252));
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        error.setText("Title Here");
        error.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        error1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        error1.setForeground(new java.awt.Color(253, 252, 252));
        error1.setText("No. of invities :");
        error1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        invites.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        invites.setForeground(new java.awt.Color(253, 252, 252));
        invites.setText("0");
        invites.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        error3.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        error3.setForeground(new java.awt.Color(253, 252, 252));
        error3.setText("No. of accepted invities :");
        error3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        accepted.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        accepted.setForeground(new java.awt.Color(253, 252, 252));
        accepted.setText("0");
        accepted.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        delete.setBackground(new java.awt.Color(33, 150, 243));
        delete.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Close");
        delete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        invite.setBackground(new java.awt.Color(33, 150, 243));
        invite.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        invite.setForeground(new java.awt.Color(255, 255, 255));
        invite.setText("Invite");
        invite.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        invite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inviteMouseClicked(evt);
            }
        });

        inviteall.setBackground(new java.awt.Color(75, 172, 198));
        inviteall.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        inviteall.setForeground(new java.awt.Color(253, 253, 253));
        inviteall.setText("Invite All");
        inviteall.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        inviteall.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inviteallStateChanged(evt);
            }
        });

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPaneLayout.createSequentialGroup()
                        .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPaneLayout.createSequentialGroup()
                        .addGap(0, 36, Short.MAX_VALUE)
                        .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPaneLayout.createSequentialGroup()
                                .addComponent(invite, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPaneLayout.createSequentialGroup()
                                .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(invites, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(error3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(accepted, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inviteall, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(166, 166, 166))
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPaneLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(error1)
                    .addComponent(invites)
                    .addComponent(error3)
                    .addComponent(accepted))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(inviteall)
                .addGap(320, 320, 320)
                .addGroup(mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invite, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        deleteClick = true;
        
        frame.dispose();
    }//GEN-LAST:event_deleteMouseClicked

    private void inviteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inviteMouseClicked
        // TODO add your handling code here:
        inviteClick = true;
        
        sendInvite();
        
        frame.dispose();
    }//GEN-LAST:event_inviteMouseClicked

    private void inviteallStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inviteallStateChanged
        // TODO add your handling code here:
        if(inviteall.isSelected()){
            int start = 0;
            int end = eventList.getModel().getSize() - 1;
            if (end >= 0)
            eventList.setSelectionInterval(start, end);
        }
        else{
            eventList.clearSelection();
        }
    }//GEN-LAST:event_inviteallStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel accepted;
    public javax.swing.JButton delete;
    public javax.swing.JLabel error;
    public javax.swing.JLabel error1;
    public javax.swing.JLabel error3;
    public javax.swing.JButton invite;
    public javax.swing.JCheckBox inviteall;
    public javax.swing.JLabel invites;
    private javax.swing.JPanel mainPane;
    // End of variables declaration//GEN-END:variables
}
